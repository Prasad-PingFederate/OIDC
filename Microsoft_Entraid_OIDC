name: Connect to Entra using OIDC

on:
  workflow_dispatch:

permissions:
  id-token: write # Required for OIDC
  contents: read

jobs:
  connect-entra:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Install Microsoft Graph PowerShell 
        shell: pwsh
        run: |
          Install-Module -Name Microsoft.Entra -Repository PSGallery -Scope CurrentUser -Force -AllowClobber

      - name: Get OIDC token and authenticate to Microsoft Graph
        shell: pwsh
        env:
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        run: |
          try {
            # Request an OIDC token with the specific audience
            $oidcRequestUrl = "$env:ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange"
            Write-Host "Requesting token from: $oidcRequestUrl"
            
            $oidcResponse = Invoke-RestMethod -Uri $oidcRequestUrl -Headers @{Authorization = "Bearer $env:ACTIONS_ID_TOKEN_REQUEST_TOKEN"}
            $oidcToken = $oidcResponse.value
            
            # Exchange OIDC token for Graph access token
            $tokenEndpoint = "https://login.microsoftonline.com/$env:TENANT_ID/oauth2/v2.0/token"
            $tokenParams = @{
              client_id = $env:CLIENT_ID
              client_assertion_type = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
              client_assertion = $oidcToken
              scope = "https://graph.microsoft.com/.default"
              grant_type = "client_credentials"
            }
            
            Write-Host "Requesting access token from: $tokenEndpoint"
            $tokenResponse = Invoke-RestMethod -Method Post -Uri $tokenEndpoint -Body $tokenParams -ContentType "application/x-www-form-urlencoded"
            Write-Host "Successfully obtained access token"
            
            # Convert access token to SecureString
            $secureAccessToken = ConvertTo-SecureString $tokenResponse.access_token -AsPlainText -Force
            
            # Connect to Microsoft Graph using the token as SecureString
            Connect-Entra -AccessToken $secureAccessToken
            
            # Test the connection with a Graph query
            Get-EntraGroup -Top 5
          }
          catch {
            Write-Error "Authentication failed: $_"
            Write-Host "Error details: $($_.Exception | Format-List -Force | Out-String)"
            exit 1
          }
